name: StockAnalysisAPI_CD

on:
  workflow_run:
    workflows: ["StockAnalysisAPI_CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@main

      - name: 'Login via Constellation Ubuntu Server'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SERVER_ADDR }}" >> ~/.ssh/known_hosts

      - name: 'Copy project files to Remote Server'
        run: |
          # 원격 서버에 배포 폴더가 없으면 생성
          ssh -p "${{ secrets.SERVER_PORT }}" "${{ secrets.SERVER_USERNAME }}"@"${{ secrets.SERVER_ADDR }}" "mkdir -p ~/dockers/StockAnalysisAPI"
          # rsync로 프로젝트 전체 파일을 로컬에서 원격 서버로 복사
          rsync -avz -e "ssh -p ${{ secrets.SERVER_PORT }}" ./* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_ADDR }}:~/dockers/StockAnalysisAPI/

      - name: 'Deploy using Docker Compose on Remote Server'
        run: |
          ssh -p "${{ secrets.SERVER_PORT }}" "${{ secrets.SERVER_USERNAME }}"@"${{ secrets.SERVER_ADDR }}" << 'EOF'
            cd ~/dockers/StockAnalysisAPI
            # docker-compose를 사용하여 이미지 빌드
            docker-compose build
            # 기존 컨테이너 종료 및 삭제
            docker-compose down
            # docker-compose를 이용해 컨테이너들을 백그라운드 실행
            docker-compose up -d
          EOF
